/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1-jre'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-lambda-java-core
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-sns
    implementation 'com.amazonaws:aws-java-sdk-sns:1.12.20'
    // https://mvnrepository.com/artifact/com.amazonaws/aws-lambda-java-events
    implementation 'com.amazonaws:aws-lambda-java-events:3.9.0'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

version = "0.1.0"
